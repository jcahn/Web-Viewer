var body = document.getElementsByTagName("body")[0];
var menuBar = document.getElementById("menuBar");
var toc = document.getElementById("toc");
var stage = document.getElementById("stage");
var page = document.getElementById("page");
var scrollX = document.getElementById("scrollX");
var scrollY = document.getElementById("scrollY");
var barX = document.getElementById("barX");
var barY = document.getElementById("barY");
var prev = document.getElementById("prev");
var next = document.getElementById("next");
var loading = document.getElementById("loading");

try {
	window.addEventListener("load", init);
	window.addEventListener("resize", resize);

	toc.addEventListener("DOMMouseScroll", function (event) {wheel('toc', event.detail * 40);});
	stage.addEventListener("DOMMouseScroll", function (event) {wheel('stage', event.detail * 40);});
}
catch (e) {
	window.attachEvent("onload", init);
	window.attachEvent("onresize", resize);
}

// --------------------------------------------------

function init() {
	setTimeout(function() {
		var tocWidth = showToc == true ? toc.clientWidth + 1 : 0;
		var menuBarHeight = menuBar.clientHeight;

		toc.style.display = showToc == true ? "block" : "none";
		stage.style.top = toc.style.top = menuBarHeight + "px";
		stage.style.left = tocWidth + "px";
		stage.style.width = (body.clientWidth - tocWidth) + "px";
		stage.style.height = (body.clientHeight - menuBarHeight) + "px";

		body.style.visibility = "visible";

		_load(1);
	}, 1);
}

function resize() {
	if (loaded == true) {
		setTimeout(function() {
			_resize();
		}, 1);
	}
}

// --------------------------------------------------

var current = 1;
var image1 = new Image();
var image2 = new Image();
var image3 = new Image();
var retry;
var loaded;
var fillType = "height"; // width, height, fixed(scale)
var scale;
var dragging = false;
var dragX = 0;
var dragY = 0;
var opacity;
var animation;

function _load(pageNo) {
	if (loaded == false) {
		return;
	}

	loaded = false;

	_loading();

	image1.src = "/get.do?id=<%=id%>&p=" + pageNo + "&s=1";
	image2.src = "/get.do?id=<%=id%>&p=" + pageNo + "&s=2";
	image3.src = "/get.do?id=<%=id%>&p=" + pageNo + "&s=3";
	retry = 0;

	setTimeout(function() {
		_loadCallback();
	}, 1);

	return false;
}

function _loadCallback() {
	if (image1.complete == true && image2.complete == true && image3.complete == true) {
		loaded = true;

		_resize();
	}
	else {
		retry++;

		if (retry >= 30000) {
			// TODO: 디자인해야 함

			alert("대기 시간 초과!!!");
		}
		else {
			setTimeout(function() {
				_loadCallback();
			}, 1);
		}
	}
}

function _resize() {
	var tocWidth = showToc == true ? toc.clientWidth + 1 : 0;
	var stageWidth = body.clientWidth - tocWidth;
	var stageHeight = body.clientHeight - menuBar.clientHeight;

	stage.style.left = tocWidth + "px";
	stage.style.width = stageWidth + "px";
	stage.style.height = stageHeight + "px";

	if (fillType == "height") {
		scale = stageHeight / defaultHeight;
	}
	else if (fillType == "width") {
		scale = stageWidth / defaultWidth;
	}
	else if (fillType == "fixed") {
		scale = parseInt(document.getElementsByName("scale")[0].value) / 100;
	}

	if (scale > 6.0) {
		scale = 6.0;
	}
	else if (scale < 0.5) {
		scale = 0.5;
	}

	document.getElementsByName("scale")[0].value = parseInt(scale * 100);

	var image;
	var factor;

	if (scale > 2.0) {
		image = image3;
		factor = 3.0;
	}
	else if (scale > 1.0) {
		image = image2;
		factor = 2.0;
	}
	else {
		image = image1;
		factor = 1.0;
	}

	var pageWidth = parseInt(image.width * scale / factor);
	var pageHeight = parseInt(image.height * scale / factor);

	page.width = pageWidth;
	page.height = pageHeight;

	var deltaWidth = stageWidth - pageWidth;
	var deltaHeight = stageHeight - pageHeight;
	var left;
	var top;

	if (deltaWidth >= 0) {
		left = parseInt(deltaWidth / 2);
	}
	else {
		if (page.offsetLeft >= 0) {
			left = 0;
		}
		else if (pageWidth + page.offsetLeft >= stageWidth) {
			left = page.offsetLeft;
		}
		else {
			left = stageWidth - pageWidth;
		}
	}

	if (deltaHeight >= 0) {
		top = parseInt(deltaHeight / 2);
	}
	else {
		if (page.offsetTop >= 0) {
			top = 0;
		}
		else if (pageHeight + page.offsetTop >= stageHeight) {
			top = page.offsetTop;
		}
		else {
			top = stageHeight - pageHeight;
		}
	}

	page.style.marginLeft = left + "px";
	page.style.marginTop = top + "px";

	page.getContext("2d").drawImage(image, 0, 0, pageWidth, pageHeight);

	if (pageWidth > stageWidth) {
		var scrollWidth = stageWidth - (pageHeight > stageHeight ? 53 : 36);

		scrollX.style.width =  scrollWidth + "px";
		scrollX.style.display = "block";

		barX.style.width = parseInt(stageWidth * scrollWidth / pageWidth) + "px";
		barX.style.marginLeft = parseInt(-left * scrollWidth / pageWidth) + "px";
	}
	else {
		scrollX.style.display = "none";
	}

	if (pageHeight > stageHeight) {
		var scrollHeight = stageHeight - (pageWidth > stageWidth ? 53 : 36);

		scrollY.style.height = scrollHeight + "px";
		scrollY.style.display = "block";

		barY.style.height = parseInt(stageHeight * scrollHeight / pageHeight) + "px";
		barY.style.marginTop = parseInt(-top * scrollHeight / pageHeight) + "px";
	}
	else {
		scrollY.style.display = "none";
	}

	if (stageHeight > 100) {
		var height = stageHeight - 60;

		prev.style.height = height + "px";
		prev.style.backgroundPositionY = parseInt((height - 40) / 2) + "px";
		prev.style.left = page.offsetLeft > 90 ? (page.offsetLeft - 60) + "px" : "30px";
		prev.style.display = current > 1 ? "block" : "none";

		next.style.height = height + "px";
		next.style.backgroundPositionY = parseInt((height - 40) / 2) + "px";
		next.style.right = stageWidth - (page.offsetLeft + pageWidth) > 90 ? (stageWidth - (page.offsetLeft + pageWidth) - 60) + "px" : "30px";
		next.style.display = current < total ? "block" : "none";
	}
	else {
		prev.style.display = "none";
		next.style.display = "none";
	}

	loading.style.left = parseInt((body.clientWidth - 40) / 2) + "px";
	loading.style.top = parseInt(body.clientHeight / 2) + "px";
}

function _loading() {
	animation = [0, 0, -4, -8, -12];

	setTimeout(_loadingAnimation, 50);
}

function _loadingAnimation() {
	if (loaded == true) {
		loading.style.display = "none";

		return;
	}

	for (var i = 1; i <= 4; i++) {
		var size = animation[i] <= 10 ? animation[i] : 20 - animation[i];

		if (size < 0) {
			size = 0;
		}

		var ball = document.getElementById("ball" + i);

		ball.style.borderWidth = size + "px";
		ball.style.marginLeft = parseInt(-size / 2) + "px";
		ball.style.marginTop = parseInt(-size / 2) + "px";

		animation[i]++

		if (animation[i] >= 20) {
			animation[i] = -5;
		}
	}

	loading.style.display = "block";

	setTimeout(_loadingAnimation, 30);
}

// --------------------------------------------------

function tocTrigger() {
	if (showToc == true) {
		showToc = false;

		toc.style.display = "none";
	}
	else {
		showToc = true;

		toc.style.display = "block";
	}

	_resize();

	return false;
}

function move(pageNo) {
	if (isNaN(pageNo) == true || (pageNo < 1) || (pageNo > total)) {
		// TODO: 디자인해야 함

		alert("1 ~ " + total + " 사이의 값이어야 합니다.");
	}
	else {
		current = pageNo;

		_load(current);
	}

	document.getElementsByName("currentPage")[0].value = current;

	return false;
}

function magnification(target) {
	var value = parseInt(target.value);

	if (isNaN(value) == true || (value < 50) || (value > 600)) {
		// TODO: 디자인해야 함

		alert("50 ~ 600 사이의 값이어야 합니다.");

		target.value = scale;
	}
	else {
		fillType = "fixed";

		_resize();
	}

	return false;
}

function wheel(target, delta) {
	if (target == "toc") {
		alert("TOC");
	}
	else if (target == "stage") {
		if (page.clientHeight > stage.clientHeight) {
			var top = parseInt(page.style.marginTop) - delta;
			var boundary = page.clientHeight - stage.clientHeight;

			if (top < -boundary) {
				top = -boundary;
			}
			else if (top > 0) {
				top = 0;
			}

			page.style.marginTop = top + "px";

			barY.style.marginTop = (-top * (scrollY.clientHeight - barY.clientHeight) / boundary) + "px";
		}
	}

	return false;
}

function drag(action, event) {
	if (action == "start") {
		var target = event.currentTarget != undefined ? event.currentTarget.id : event.srcElement.id;

		if (target == "barX") {
			dragging = true;
			dragX = event.clientX;
			dragY = 0;
		}
		else if (target == "barY") {
			dragging = true;
			dragX = 0;
			dragY = event.clientY;
		}
	}
	else if (action == "stop") {
		dragging = false;
		dragX = 0;
		dragY = 0;
	}
	else if (action == "conditional_stop") {
		if ((event.clientX <= 0) || (event.clientX >= body.clientWidth) || (event.clientY <= 0) || (event.clientY >= body.clientHeight)) {
			dragging = false;
			dragX = 0;
			dragY = 0;
		}
	}
	else if (action == "move" && dragging == true) {
		if (dragX != 0) {
			var x = event.clientX - dragX;

			dragX = event.clientX;

			if (x != 0) {
				var left = barX.offsetLeft + x;

				if (left < 0) {
					left = 0;
				}
				else {
					var boundary = scrollX.clientWidth - barX.clientWidth;

					if (left > boundary) {
						left = scrollX.clientWidth - barX.clientWidth;
					}
				}

				barX.style.marginLeft = left + "px";
			}
		}
		else if (dragY != 0) {
			var y = event.clientY - dragY;

			dragY = event.clientY;

			if (y != 0) {
				var top = barY.offsetTop + y;

				if (top < 0) {
					top = 0;
				}
				else {
					var boundary = scrollY.clientHeight - barY.clientHeight;

					if (top > boundary) {
						top = scrollY.clientHeight - barY.clientHeight;
					}
				}

				barY.style.marginTop = top + "px";
			}
		}

		page.style.marginLeft = (-(barX.offsetLeft * (page.clientWidth - stage.clientWidth) / (scrollX.clientWidth - barX.clientWidth))) + "px";
		page.style.marginTop = (-(barY.offsetTop * (page.clientHeight - stage.clientHeight) / (scrollY.clientHeight - barY.clientHeight))) + "px";
	}

	return false;
}
